// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	appcardget_list "nrs_customer_module_backend/internal/handler/app/card/get_list"
	appcountry_codeget "nrs_customer_module_backend/internal/handler/app/country_code/get"
	applogin "nrs_customer_module_backend/internal/handler/app/login"
	applogout "nrs_customer_module_backend/internal/handler/app/logout"
	appotp "nrs_customer_module_backend/internal/handler/app/otp"
	apppassword "nrs_customer_module_backend/internal/handler/app/password"
	appregistration_listget_list "nrs_customer_module_backend/internal/handler/app/registration_list/get_list"
	appsidemenu "nrs_customer_module_backend/internal/handler/app/sidemenu"
	appsplash "nrs_customer_module_backend/internal/handler/app/splash"
	appui "nrs_customer_module_backend/internal/handler/app/ui"
	portaldashboard "nrs_customer_module_backend/internal/handler/portal/dashboard"
	portallogin "nrs_customer_module_backend/internal/handler/portal/login"
	portallogout "nrs_customer_module_backend/internal/handler/portal/logout"
	portalmembercard "nrs_customer_module_backend/internal/handler/portal/membercard"
	portalmembercardagree_term "nrs_customer_module_backend/internal/handler/portal/membercard/agree_term"
	portalmembercardsetting "nrs_customer_module_backend/internal/handler/portal/membercard/setting"
	portalmembercardsms_template "nrs_customer_module_backend/internal/handler/portal/membercard/sms_template"
	portalmembercardterms_n_condition "nrs_customer_module_backend/internal/handler/portal/membercard/terms_n_condition"
	portalpassword "nrs_customer_module_backend/internal/handler/portal/password"
	portalregistration_member_inforegistration_listget_list "nrs_customer_module_backend/internal/handler/portal/registration_member_info/registration_list/get_list"
	portalregistration_member_inforenew_listget_list "nrs_customer_module_backend/internal/handler/portal/registration_member_info/renew_list/get_list"
	portalregistration_member_infoupgrade_listget_list "nrs_customer_module_backend/internal/handler/portal/registration_member_info/upgrade_list/get_list"
	portalsidemenu "nrs_customer_module_backend/internal/handler/portal/sidemenu"
	portalui "nrs_customer_module_backend/internal/handler/portal/ui"
	sharedfileprocess "nrs_customer_module_backend/internal/handler/shared/fileprocess"
	sso "nrs_customer_module_backend/internal/handler/sso"
	"nrs_customer_module_backend/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/get_list",
					Handler: appcardget_list.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app/card"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/get",
					Handler: appcountry_codeget.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app/country_code"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: applogin.LoginHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: applogout.LogoutHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/request/sms",
				Handler: appotp.OtpHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/verify",
				Handler: appotp.OtpVerifyHandler(serverCtx),
			},
		},
		rest.WithPrefix("/app/otp"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/forgot_password",
					Handler: apppassword.ForgotPasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reset_password",
					Handler: apppassword.ResetPasswordHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/registration_list/get_list",
					Handler: appregistration_listget_list.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/sidemenu",
					Handler: appsidemenu.SidemenuHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.SplashTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/splash",
					Handler: appsplash.SplashHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:type",
					Handler: appui.UiHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/app/ui"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/dashboard",
					Handler: portaldashboard.DashboardHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/login",
					Handler: portallogin.LoginHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: portallogout.LogoutHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/get_details",
					Handler: portalmembercard.GetDetailsHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/get_list",
					Handler: portalmembercard.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/membercard"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/add",
					Handler: portalmembercardagree_term.AddHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: portalmembercardagree_term.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/edit",
					Handler: portalmembercardagree_term.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/get",
					Handler: portalmembercardagree_term.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/membercard/agree_term"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/edit",
					Handler: portalmembercardsetting.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/get",
					Handler: portalmembercardsetting.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/membercard/setting"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/add",
					Handler: portalmembercardsms_template.AddHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: portalmembercardsms_template.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/edit",
					Handler: portalmembercardsms_template.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/get",
					Handler: portalmembercardsms_template.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/membercard/sms_template"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/add",
					Handler: portalmembercardterms_n_condition.AddHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete",
					Handler: portalmembercardterms_n_condition.DeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/edit",
					Handler: portalmembercardterms_n_condition.EditHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/get",
					Handler: portalmembercardterms_n_condition.GetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/membercard/terms_n_condition"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/forgot_password",
					Handler: portalpassword.ForgotPasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/reset_password",
					Handler: portalpassword.ResetPasswordHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/registration_member_info/registration_list/get_list",
					Handler: portalregistration_member_inforegistration_listget_list.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/registration_member_info/renew_list/get_list",
					Handler: portalregistration_member_inforenew_listget_list.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/registration_member_info/upgrade_list/get_list",
					Handler: portalregistration_member_infoupgrade_listget_list.GetListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AfterLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/sidemenu",
					Handler: portalsidemenu.SidemenuHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BeforeLoginTokenCheckingMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:type",
					Handler: portalui.UiHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/portal/ui"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/upload",
				Handler: sharedfileprocess.UploadHandler(serverCtx),
			},
		},
		rest.WithPrefix("/shared/fileprocess"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.BasicAuthMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/authorize",
					Handler: sso.AuthorizedHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/refresh_token",
					Handler: sso.RefreshTokenHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/sso"),
		rest.WithTimeout(30000*time.Millisecond),
		rest.WithMaxBytes(1048576),
	)
}
